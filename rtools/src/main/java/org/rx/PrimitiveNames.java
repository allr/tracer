package org.rx;

public class PrimitiveNames {
	public static final String[] primitive_names = new String[]{
		"if", "while", "for", "repeat", "break", "next", "return", "function", "<-", "=", 
		"<<-", "{", "(", ".subset", ".subset2", "[", "[[", "$", "@", "[<-", 
		"[[<-", "$<-", "switch", "browser", ".primTrace", ".primUntrace", ".Internal", ".Primitive", "call", "quote", 
		"substitute", "missing", "nargs", "on.exit", "stop", "warning", "gettext", "ngettext", "bindtextdomain", ".addCondHands", 
		".resetCondHands", ".signalCondition", ".dfltStop", ".dfltWarn", ".addRestart", ".getRestart", ".invokeRestart", ".addTryHandlers", "geterrmessage", "seterrmessage", 
		"printDeferredWarnings", "interruptsSuspended", "restart", "as.function.default", "debug", "undebug", "isdebugged", "debugonce", "Recall", "delayedAssign", 
		"makeLazy", "identical", "+", "-", "*", "/", "^", "%%", "%/%", "%*%", 
		"==", "!=", "<", "<=", ">=", ">", "&", "|", "!", "&&", 
		"||", ":", "~", "all", "any", "length", "length<-", "c", "oldClass", "oldClass<-", 
		"class", ".cache_class", "class<-", "unclass", "names", "names<-", "dimnames", "dimnames<-", "dim", "dim<-", 
		"attributes", "attributes<-", "attr", "attr<-", "levels<-", "vector", "complex", "matrix", "row", "col", 
		"unlist", "cbind", "rbind", "drop", "all.names", "comment", "comment<-", "get", "mget", "exists", 
		"assign", "list2env", "remove", "duplicated", "unique", "anyDuplicated", "which", "which.min", "pmin", "pmax", 
		"which.max", "match", "pmatch", "charmatch", "match.call", "complete.cases", "crossprod", "tcrossprod", "attach", "detach", 
		"search", "round", "signif", "log", "log10", "log2", "abs", "floor", "ceiling", "sqrt", 
		"sign", "trunc", "exp", "expm1", "log1p", "cos", "sin", "tan", "acos", "asin", 
		"atan", "cosh", "sinh", "tanh", "acosh", "asinh", "atanh", "lgamma", "gamma", "digamma", 
		"trigamma", "atan2", "lbeta", "beta", "lchoose", "choose", "dchisq", "pchisq", "qchisq", "dexp", 
		"pexp", "qexp", "dgeom", "pgeom", "qgeom", "dpois", "ppois", "qpois", "dt", "pt", 
		"qt", "dsignrank", "psignrank", "qsignrank", "besselJ", "besselY", "psigamma", "Re", "Im", "Mod", 
		"Arg", "Conj", "dbeta", "pbeta", "qbeta", "dbinom", "pbinom", "qbinom", "dcauchy", "pcauchy", 
		"qcauchy", "df", "pf", "qf", "dgamma", "pgamma", "qgamma", "dlnorm", "plnorm", "qlnorm", 
		"dlogis", "plogis", "qlogis", "dnbinom", "pnbinom", "qnbinom", "dnorm", "pnorm", "qnorm", "dunif", 
		"punif", "qunif", "dweibull", "pweibull", "qweibull", "dnchisq", "pnchisq", "qnchisq", "dnt", "pnt", 
		"qnt", "dwilcox", "pwilcox", "qwilcox", "besselI", "besselK", "dnbinom_mu", "pnbinom_mu", "qnbinom_mu", "dhyper", 
		"phyper", "qhyper", "dnbeta", "pnbeta", "qnbeta", "dnf", "pnf", "qnf", "dtukey", "ptukey", 
		"qtukey", "rchisq", "rexp", "rgeom", "rpois", "rt", "rsignrank", "rbeta", "rbinom", "rcauchy", 
		"rf", "rgamma", "rlnorm", "rlogis", "rnbinom", "rnbinom_mu", "rnchisq", "rnorm", "runif", "rweibull", 
		"rwilcox", "rhyper", "rmultinom", "sample", "RNGkind", "set.seed", "sum", "min", "max", "prod", 
		"mean", "range", "cov", "cor", "cumsum", "cumprod", "cummax", "cummin", "as.character", "as.integer", 
		"as.double", "as.complex", "as.logical", "as.raw", "as.call", "as.environment", "storage.mode<-", "as.vector", "paste", "file.path", 
		"format", "format.info", "cat", "do.call", "type.convert", "nchar", "nzchar", "substr", "substr<-", "strsplit", 
		"abbreviate", "make.names", "grep", "grepl", "sub", "gsub", "regexpr", "gregexpr", "agrep", "tolower", 
		"toupper", "chartr", "sprintf", "make.unique", "charToRaw", "rawToChar", "rawShift", "intToBits", "rawToBits", "packBits", 
		"utf8ToInt", "intToUtf8", "encodeString", "iconv", "strtrim", "strtoi", "is.null", "is.logical", "is.integer", "is.real", 
		"is.double", "is.complex", "is.character", "is.symbol", "is.environment", "is.list", "is.pairlist", "is.expression", "is.raw", "is.object", 
		"is.numeric", "is.matrix", "is.array", "is.atomic", "is.recursive", "is.call", "is.language", "is.function", "is.single", "is.na", 
		"is.nan", "is.finite", "is.infinite", "is.vector", "proc.time", "gc.time", "withVisible", "expression", "interactive", "invisible", 
		"rep", "rep.int", "seq.int", "seq_len", "seq_along", "list", "xtfrm", "enc2native", "enc2utf8", "emptyenv", 
		"baseenv", "globalenv", "environment<-", "pos.to.env", "eapply", "lapply", "vapply", ".C", ".Fortran", ".External", 
		".Call", ".External.graphics", ".Call.graphics", "Version", "machine", "commandArgs", "unzip", "system", "parse", "parse_Rd", 
		"parseLatex", "save", "saveToConn", "load", "loadFromConn2", "serializeToConn", "unserializeFromConn", "deparse", "deparseRd", "dput", 
		"dump", "quit", "readline", "menu", "print.default", "print.function", "prmatrix", "gc", "gcinfo", "gctorture", 
		"memory.profile", "split", "is.loaded", "recordGraphics", "dyn.load", "dyn.unload", "ls", "typeof", "eval", "eval.with.vis", 
		"sys.parent", "sys.call", "sys.frame", "sys.nframe", "sys.calls", "sys.frames", "sys.on.exit", "sys.parents", "sys.function", "browserText", 
		"browserCondition", "browserSetDebug", "parent.frame", "sort", "is.unsorted", "psort", "qsort", "radixsort", "order", "rank", 
		"scan", "count.fields", "readTableHead", "t.default", "aperm", "builtins", "edit", "dataentry", "dataviewer", "args", 
		"formals", "body", "bodyCode", "environment", "environmentName", "env2list", "reg.finalizer", "options", "sink", "sink.number", 
		"lib.fixup", "rapply", "islistfactor", "colSums", "colMeans", "rowSums", "rowMeans", "Rprof", "Rprofmem", "tracemem", 
		"retracemem", "untracemem", "object.size", "inspect", "mem.limits", "merge", "capabilities", "capabilitiesX11", "new.env", "parent.env", 
		"parent.env<-", "l10n_info", "Cstack_info", "startHTTPD", "stopHTTPD", "file.show", "file.edit", "file.create", "file.remove", "file.rename", 
		"file.append", "codeFiles.append", "file.symlink", "file.copy", "list.files", "file.exists", "file.choose", "file.info", "file.access", "dir.create", 
		"tempfile", "tempdir", "R.home", "date", "Sys.getenv", "Sys.setenv", "Sys.unsetenv", "getwd", "setwd", "basename", 
		"dirname", "dirchmod", "Sys.chmod", "Sys.umask", "Sys.readlink", "Sys.info", "Sys.sleep", "Sys.getlocale", "Sys.setlocale", "Sys.localeconv", 
		"path.expand", "Sys.getpid", "normalizePath", "Sys.glob", "unlink", "fft", "mvfft", "nextn", "polyroot", "X11", 
		"savePlot", "cairo", "dev.control", "dev.displaylist", "dev.copy", "dev.cur", "dev.next", "dev.off", "dev.prev", "dev.set", 
		"rgb", "rgb256", "rgb2hsv", "hsv", "hcl", "gray", "colors", "col2rgb", "palette", "plot.new", 
		"plot.window", "axis", "plot.xy", "text", "mtext", "title", "abline", "box", "rect", "path", 
		"raster", "polygon", "xspline", "par", "segments", "arrows", "layout", "locator", "identify", "strheight", 
		"strwidth", "contour", "contourLines", "image", "dend", "dend.window", "erase", "persp", "filledcontour", "getSnapshot", 
		"playSnapshot", "symbols", "getGraphicsEvent", "getGraphicsEventEnv", "setGraphicsEventEnv", "devAskNewPage", "dev.size", "clip", "grconvertX", "grconvertY", 
		"inherits", "UseMethod", "NextMethod", "standardGeneric", "nlm", "fmin", "zeroin", "zeroin2", "optim", "optimhess", 
		"terms.formula", "update.formula", "model.frame", "model.matrix", "D", "deriv.default", "loadhistory", "savehistory", "addhistory", "Sys.time", 
		"as.POSIXct", "as.POSIXlt", "format.POSIXlt", "strptime", "Date2POSIXlt", "POSIXlt2Date", "mkCode", "bcClose", "is.builtin.internal", "disassemble", 
		"bcVersion", "load.from.file", "save.to.file", "putconst", "stdin", "stdout", "stderr", "isatty", "readLines", "writeLines", 
		"readBin", "writeBin", "readChar", "writeChar", "open", "isOpen", "isIncomplete", "isSeekable", "close", "flush", 
		"file", "url", "pipe", "fifo", "gzfile", "bzfile", "xzfile", "unz", "seek", "truncate", 
		"pushBack", "clearPushBack", "pushBackLength", "rawConnection", "rawConnectionValue", "textConnection", "textConnectionValue", "socketConnection", "sockSelect", "getConnection", 
		"getAllConnections", "summary.connection", "download", "nsl", "gzcon", "memCompress", "memDecompress", "readDCF", "getNumRtoCConverters", "getRtoCConverterDescriptions", 
		"getRtoCConverterStatus", "setToCConverterActiveStatus", "removeToCConverterActiveStatus", "lockEnvironment", "environmentIsLocked", "lockBinding", "unlockBinding", "bindingIsLocked", "makeActiveBinding", "bindingIsActive", 
		"mkUnbound", "isNamespaceEnv", "registerNamespace", "unregisterNamespace", "getRegisteredNamespace", "getNamespaceRegistry", "importIntoEnv", "env.profile", "write.table", "Encoding", 
		"setEncoding", "lazyLoadDBfetch", "setTimeLimit", "setSessionTimeLimit", "icuSetCollate", "readRenviron", ".Call.ignored"
	};
	public static final boolean[] is_special_primitive = new boolean[]{
		true,	true,	true,	true,	true,	true,	true,	true,	true,	true,	
		true,	true,	false,	false,	false,	true,	true,	true,	true,	true,	
		true,	true,	true,	false,	false,	false,	true,	false,	true,	true,	
		true,	true,	false,	true,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	true,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	true,	
		true,	false,	true,	false,	false,	false,	false,	true,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	true,	true,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	true,	true,	true,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	true,	true,	false,	false,	
		true,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	true,	true,	true,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	true,	true,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false,	false,	false,	false,	
		false,	false,	false,	false,	false,	false,	false
	};
}
